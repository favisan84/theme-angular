!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/platform-browser/animations"),require("@angular/common"),require("@angular/router"),require("@angular/cdk/drag-drop"),require("@angular/cdk/scrolling"),require("@angular/cdk/table"),require("@angular/cdk/tree"),require("@angular/flex-layout"),require("@angular/material/core"),require("@angular/material-moment-adapter"),require("@angular/forms"),require("moment"),require("@angular/core"),require("rxjs"),require("@angular/material"),require("rxjs/operators")):"function"==typeof define&&define.amd?define("theme-angular",["exports","@angular/platform-browser/animations","@angular/common","@angular/router","@angular/cdk/drag-drop","@angular/cdk/scrolling","@angular/cdk/table","@angular/cdk/tree","@angular/flex-layout","@angular/material/core","@angular/material-moment-adapter","@angular/forms","moment","@angular/core","rxjs","@angular/material","rxjs/operators"],t):t(e["theme-angular"]={},e.ng.platformBrowser.animations,e.ng.common,e.ng.router,e.ng.cdk["drag-drop"],e.ng.cdk.scrolling,e.ng.cdk.table,e.ng.cdk.tree,e.ng["flex-layout"],e.ng.material.core,e.ng["material-moment-adapter"],e.ng.forms,e.moment,e.ng.core,e.rxjs,e.ng.material,e.rxjs.operators)}(this,function(e,t,a,n,i,o,r,l,s,c,d,p,u,g,h,m,f){"use strict";var y="default"in u?u["default"]:u,v=(x.decorators=[{type:g.NgModule,args:[{exports:[r.CdkTableModule,l.CdkTreeModule,i.DragDropModule,m.MatAutocompleteModule,m.MatBadgeModule,m.MatBottomSheetModule,m.MatButtonModule,m.MatButtonToggleModule,m.MatCardModule,m.MatCheckboxModule,m.MatChipsModule,m.MatStepperModule,m.MatDatepickerModule,m.MatDialogModule,m.MatDividerModule,m.MatExpansionModule,m.MatGridListModule,m.MatIconModule,m.MatInputModule,m.MatListModule,m.MatMenuModule,m.MatNativeDateModule,m.MatPaginatorModule,m.MatProgressBarModule,m.MatProgressSpinnerModule,m.MatRadioModule,m.MatRippleModule,m.MatSelectModule,m.MatSidenavModule,m.MatSliderModule,m.MatSlideToggleModule,m.MatSnackBarModule,m.MatSortModule,m.MatTableModule,m.MatTabsModule,m.MatToolbarModule,m.MatTooltipModule,m.MatTreeModule,o.ScrollingModule,s.FlexLayoutModule]}]}],x);function x(){}var b={snapshot:{data:{}}},M=b,D=b,C=(k.decorators=[{type:g.NgModule,args:[{exports:[a.CommonModule,n.RouterModule,v,p.FormsModule,p.ReactiveFormsModule,t.BrowserAnimationsModule],providers:[{provide:n.ActivatedRoute,useValue:M},{provide:n.Router,useValue:D}]}]}],k);function k(){}var I=(A.prototype.ngOnInit=function(){this.filterElement("")},A.prototype.onSelectionChange=function(e){this.selectionChange.emit(e.value)},A.prototype.filterElement=function(t){this.itens&&(this.itensFiltrados=this.itens.filter(function(e){return-1<e.value.toString().toLowerCase().indexOf(t)}))},A.decorators=[{type:g.Component,args:[{selector:"gualib-select-search",template:'<mat-select #select [(ngModel)]="initSelectedValue" (selectionChange)="onSelectionChange($event)">\n  <input #inputSearch matInput class="input-search-select" placeholder="Pesquisar..." type="text"\n    (keyup)="filterElement($event.target.value)">\n  <mat-option *ngFor="let item of itensFiltrados" [value]="item.key">\n    <div style="display: flex; flex-direction: row;align-items: center;" *ngIf="item">\n      {{item.value}}\n    </div>\n  </mat-option>\n</mat-select>',encapsulation:g.ViewEncapsulation.None,styles:[".input-search-select{padding-left:10px;border:none;border-bottom:1px solid #e5e2e2;width:100%;outline:0!important}.formfieldPadrao{width:100%}"]}]}],A.ctorParameters=function(){return[]},A.propDecorators={itens:[{type:g.Input}],initSelectedValue:[{type:g.Input}],selectionChange:[{type:g.Output}]},A);function A(){this.selectionChange=new g.EventEmitter}var w=(L.decorators=[{type:g.NgModule,args:[{declarations:[I],imports:[C],exports:[I]}]}],L);function L(){}var E=(F.prototype.closeDialog=function(e){e||this.dialogRef.close()},F.decorators=[{type:g.Component,args:[{selector:"gua-image-gallery-zoom",template:'<div [style.color]="data?.color" class="close-button">\n  <button mat-icon-button (click)="closeDialog(false)" [style.background-color]="data?.background">\n    <i class="material-icons">close</i>\n  </button>\n</div>\n<div class="image" (click)="closeDialog(data?.disableClose)">\n  <img cdkFocusInitial [src]="data.url">\n</div>\n',styles:[":host{background-color:#000}:host .image{display:flex;align-items:center;justify-content:center;align-items:center;height:100%}:host img{align-content:center;height:inherit}:host .close-button{color:#000;position:absolute;right:10px;top:10px}:host .mat-icon-button{height:auto;width:auto}:host .material-icons{font-size:50px}"]}]}],F.ctorParameters=function(){return[{type:m.MatDialogRef},{type:undefined,decorators:[{type:g.Inject,args:[m.MAT_DIALOG_DATA]}]}]},F);function F(e,t){this.dialogRef=e,this.data=t}var S=(T.prototype.ngOnChanges=function(){this.images.length&&(this.selectedImage=this.images[0])},T.prototype.ngOnInit=function(){this.height="auto",this.images.length&&(this.selectedImage=this.images[0])},T.prototype.openZoom=function(){this.selectedImage&&this.images.length&&this.dialog.open(E,{disableClose:!1,height:"100%",width:"100%",maxWidth:"100vw",maxHeight:"100vh",data:{url:this.selectedImage,color:this.closeButtonColor,background:this.closeButtonBackground,disableClose:this.disableClose},panelClass:this.panelClass})},T.prototype.onClick=function(e){this.onAddImage.emit(e)},T.prototype.onClickDelete=function(e){e.stopPropagation(),this.onDeleteImage.emit(e)},T.decorators=[{type:g.Component,args:[{selector:"gualib-image-gallery",template:'<ng-container style="height: 100%;">\n  <div fxFlex style="height: 100%;">\n    <mat-card class="imagem-principal" (click)="openZoom()" fxLayoutAlign="center center">\n      <button *ngIf="editMode && images.length" (click)="onClickDelete($event)" class="delete-button gua-btn-primary" mat-button>\n          <mat-icon class="delete-icon gua-color-primary">delete_outline</mat-icon>\n          Excluir imagem\n      </button>\n      <img *ngIf="selectedImage && images.length" mat-card-image [style.height]="height" [src]="selectedImage">\n      <img *ngIf="images.length === 0 && emptyImagePath" mat-card-image [style.height]="height" [src]="emptyImagePath">\n    </mat-card>\n    <div fxLayout="row wrap" fxLayoutAlign="center">\n      <div *ngFor="let i of images" fxLayout="row" (click)="selectedImage = i;" class="selecao-image">\n        <mat-card [style.height]="height" fxLayoutAlign="center center">\n          <img mat-card-image [src]="i">\n        </mat-card>\n      </div>\n      <div *ngIf="editMode" fxLayout="row" class="selecao-image">\n        <mat-card class="add-btn" fxLayoutAlign="center center" (click)="onClick($event)">\n          <mat-icon style="height: auto;text-align: center;font-size: 50px" class="gua-color-primary" fxFlex>add_photo_alternate</mat-icon>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n</ng-container>',styles:[".gua-btn-primary{background-color:#007bfc!important;color:#fff!important}.gua-color-primary{color:#fff!important}:host .imagem-principal{height:80%}:host .material-icons{font-size:18px}:host .delete-button{display:none;position:absolute;right:10px;top:10px}:host .delete-icon{font-size:20px}:host .mat-card{cursor:pointer;border-radius:0;padding:0;margin:0;box-shadow:none!important;background-color:transparent}:host .mat-card>img{border-radius:10px;height:100%;width:100%;margin-top:0}:host .selecao-image{height:100px;width:100px;padding:5px}:host .add-btn{width:100%;border-radius:10px;background-color:rgba(0,0,0,.3)}:host .imagem-principal:hover>.delete-button{display:block}"]}]}],T.ctorParameters=function(){return[{type:m.MatDialog}]},T.propDecorators={images:[{type:g.Input}],closeButtonColor:[{type:g.Input}],closeButtonBackground:[{type:g.Input}],panelClass:[{type:g.Input}],editMode:[{type:g.Input}],onAddImage:[{type:g.Output}],onDeleteImage:[{type:g.Output}],disableClose:[{type:g.Input}],emptyImagePath:[{type:g.Input}]},T);function T(e){this.dialog=e,this.images=[],this.editMode=!1,this.onAddImage=new g.EventEmitter,this.onDeleteImage=new g.EventEmitter,this.disableClose=!1,this.emptyImagePath="",this.isDisplayBtn=!1}var V=(O.decorators=[{type:g.NgModule,args:[{imports:[C],declarations:[S,E],entryComponents:[E],exports:[S]}]}],O);function O(){}var _=(P.decorators=[{type:g.Component,args:[{selector:"gualib-loading-overlay",template:'<div class="loading-overlay" style="display: flex; align-items: center; justify-content: center;" [class.loading]="loading">\n  <img class="image-loading" [src]="image">\n</div>',styles:[".loading-overlay{background-color:rgba(255,255,255,.7);position:fixed;top:0;left:0;width:100%;height:100%;z-index:10;transition:.25s ease-in-out;opacity:0;visibility:hidden}.loading-overlay.loading{opacity:1;visibility:visible}.image-loading{height:128px}"]}]}],P.ctorParameters=function(){return[]},P.propDecorators={loading:[{type:g.Input}],image:[{type:g.Input}]},P);function P(){this.image="assets/image-loading.gif"}var B=(Y.prototype.startLoading=function(){var e=this;setTimeout(function(){e.setLoading(!0)})},Y.prototype.endLoading=function(){var e=this;setTimeout(function(){e.setLoading(!1)})},Y.prototype.setLoading=function(e){e?(this.quantidade++,this.loading=!0):(this.quantidade--,0===this.quantidade&&(this.loading=!1))},Y.prototype.getLoading=function(){return this.loading},Y.decorators=[{type:g.Injectable}],Y);function Y(){this.loading=!1,this.quantidade=0}var q=(N.forRoot=function(){return{ngModule:N,providers:[B,_]}},N.decorators=[{type:g.NgModule,args:[{declarations:[_],imports:[C],exports:[_],providers:[B]}]}],N);function N(){}var R=(Object.defineProperty(j.prototype,"input",{get:function(){return this.inputValue},set:function(e){this.inputValue=e},enumerable:!0,configurable:!0}),j.prototype.onClickCloseChip=function(e,t){t.stopPropagation(),this.onCloseChip.emit(e)},j.prototype.onInputFocus=function(){this.inputRef.nativeElement.focus()},j.prototype.onClickSearch=function(){this.onSearch.emit(this.inputValue)},j.prototype.onSelectionChange=function(){this.onChangeSelect.emit(this.selectValue)},j.prototype.onKeyUp=function(e){this.inputChange.emit(this.inputValue),"Enter"===e.code&&this.onClickSearch()},j.decorators=[{type:g.Component,args:[{selector:"gualib-search-chips-select",template:'<div fxFlex="100" style="height: 100%;">\n  <div fxFlex="20" fxFlex.xs="25"  fxLayoutAlign="start center" fxLayout="row" class="input-container">\n    <input #inputRef [(ngModel)]="inputValue" fxFlex="100" class="input" (keyup)="onKeyUp($event)">\n  </div>\n  <div fxFlex="55" fxFlex.xs="35" fxLayoutAlign="start center" fxLayout="row" class="chips-container" fxLayoutGap="10px" (click)="onInputFocus()">\n    <div fxLayoutAlign="start center" *ngFor="let chip of chips" class="chip" (click)="$event.stopPropagation();">\n      <div class="chip-value">{{chip.value}}</div>\n      <mat-icon (click)="onClickCloseChip(chip.key, $event)" style="cursor: pointer !important;">close</mat-icon>\n    </div>\n  </div>\n  <div fxFlex="20" fxFlex.xs="30" fxLayoutAlign="start center" class="select-container" (click)="onInputFocus()">\n    <div fxFlex="50" *ngIf="selectLabel" [ngStyle.xs]="{\'white-space\': \'normal\', \'line-height\': \'12px\', \'text-align\': \'center\'}" fxLayoutAlign="end center" class="select-label">{{selectLabel}}</div>\n    <div fxFlex="50" class="select-select">\n      <mat-select *ngIf="selectChoices.length" [(ngModel)]="selectValue" (click)="$event.stopPropagation();" (selectionChange)="onSelectionChange()">\n        <mat-option *ngFor="let choice of selectChoices" [value]="choice.key">\n          {{choice.value}}\n        </mat-option>\n      </mat-select>\n    </div>\n  </div>\n  <div fxFlex="5" fxFlex.xs="10" class="btn-container" fxLayoutAlign="center center">\n    <button fxLayoutAlign="center center" class="btn" (click)="onClickSearch()">\n      <mat-icon>search</mat-icon>\n    </button>\n  </div>\n</div>',styles:[":host{font-size:11px}.input-container{border-radius:5px 0 0 5px;border-left:1px solid silver;border-top:1px solid silver;border-bottom:1px solid silver}.input{background-color:transparent;height:100%;border:0;padding-left:10px;padding-right:10px;font-size:14px;outline-width:0!important}.chips-container{overflow-y:auto;border-top:1px solid silver;border-bottom:1px solid silver}.chip{white-space:nowrap;height:80%;border-radius:5px;background-color:#f3f4f6}.chip-value{padding-left:10px;padding-right:10px}.chip-btn{padding:0;margin:0;width:auto;height:auto}.select-container{border-top:1px solid silver;border-bottom:1px solid silver}.select-label{padding-right:2px;white-space:nowrap;font-weight:bolder}.select-select{padding-right:10px}.btn-container{cursor:pointer!important;border-radius:0 5px 5px 0;border:1px solid #007bfc;background-color:#007bfc}.btn{cursor:pointer!important;color:#fff;border:0;height:100%;width:100%;border-radius:0 5px 5px 0;background-color:transparent;box-shadow:none}"]}]}],j.propDecorators={inputRef:[{type:g.ViewChild,args:["inputRef"]}],selectValue:[{type:g.Input}],chips:[{type:g.Input}],input:[{type:g.Input}],inputChange:[{type:g.Output}],selectLabel:[{type:g.Input}],selectChoices:[{type:g.Input}],onChangeSelect:[{type:g.Output}],onCloseChip:[{type:g.Output}],onSearch:[{type:g.Output}]},j);function j(){this.chips=[],this.inputValue="",this.inputChange=new g.EventEmitter,this.selectLabel="",this.selectChoices=[],this.onChangeSelect=new g.EventEmitter,this.onCloseChip=new g.EventEmitter,this.onSearch=new g.EventEmitter}var z=(H.decorators=[{type:g.NgModule,args:[{declarations:[R],imports:[C],exports:[R],providers:[]}]}],H);function H(){}var $=(G.prototype.ngOnDestroy=function(){this.destroyed.next(),this.destroyed.complete()},Object.defineProperty(G.prototype,"periodLabel",{get:function(){return this.dateAdapter.format(this.calendar.activeDate,this.dateFormats.display.monthYearLabel).toLocaleUpperCase()},enumerable:!0,configurable:!0}),G.prototype.previousClicked=function(e){this.calendar.activeDate="month"===e?this.dateAdapter.addCalendarMonths(this.calendar.activeDate,-1):this.dateAdapter.addCalendarYears(this.calendar.activeDate,-1)},G.prototype.nextClicked=function(e){this.calendar.activeDate="month"===e?this.dateAdapter.addCalendarMonths(this.calendar.activeDate,1):this.dateAdapter.addCalendarYears(this.calendar.activeDate,1)},G.decorators=[{type:g.Component,args:[{selector:"custom-header",template:'<div class="example-header">\n    <button mat-icon-button  (click)="previousClicked(\'year\')">\n      <mat-icon aria-hidden="false" >keyboard_arrow_left</mat-icon>\n    </button>\n    <span class="example-header-label">{{periodLabel}}</span>\n    <button mat-icon-button  (click)="nextClicked(\'year\')">\n      <mat-icon aria-hidden="false" >keyboard_arrow_right</mat-icon>\n    </button>\n  </div>',changeDetection:g.ChangeDetectionStrategy.OnPush,styles:[".example-header{display:flex;align-items:center;padding:.5em}.example-header-label{flex:1;height:1em;font-weight:500;text-align:center}.example-double-arrow .mat-icon{margin:-22%}"]}]}],G.ctorParameters=function(){return[{type:m.MatCalendar},{type:m.DateAdapter},{type:undefined,decorators:[{type:g.Inject,args:[m.MAT_DATE_FORMATS]}]},{type:g.ChangeDetectorRef}]},G);function G(e,t,a,n){this.calendar=e,this.dateAdapter=t,this.dateFormats=a,this.destroyed=new h.Subject,e.stateChanges.pipe(f.takeUntil(this.destroyed)).subscribe(function(){return n.markForCheck()})}var U=y||u,K={parse:{dateInput:"MMM  YYYY"},display:{dateInput:"MMM  YYYY",monthYearLabel:"YYYY",dateA11yLabel:"MMM",monthYearA11yLabel:"MMMM YYYY"}},Z=(W.prototype.ngOnInit=function(){this.inicialDate.setValue(U().startOf("month")),this.finalDate.setValue(U().endOf("month"))},W.prototype.chosenYearHandler=function(e,t){var a;this.disableClearButton(),"initial"===t?((a=this.inicialDate.value).year(e.year()),this.inicialDate.setValue(a)):((a=this.finalDate.value).year(e.year()),this.finalDate.setValue(a))},W.prototype.chosenMonthHandler=function(e,t,a){var n;this.disableClearButton(),"initial"===a?((n=this.inicialDate.value).month(e.month()),n.startOf("month"),this.inicialDate.setValue(n)):((n=this.finalDate.value).month(e.month()),n.endOf("month"),this.finalDate.setValue(n)),t.close(),this.verifyValidDates()&&this.returnDateEvent.emit({initialDate:this.inicialDate.value,finalDate:this.finalDate.value})},W.prototype.verifyValidDates=function(){var e=this.inicialDate.value,t=this.finalDate.value;return e.isBefore(t)||e.isSame(t)?this.validDate=!0:(this.initialAfterFinalDate(),this.validDate=!1),e.isBefore(t)},W.prototype.disableClearButton=function(){var e=this.inicialDate.value,t=this.finalDate.value;this.validDate=!0,this.displayButton=!e.isSame(t)},W.prototype.clear=function(){this.inicialDate=new p.FormControl(U()),this.finalDate=new p.FormControl(U()),this.returnDateEvent.emit(null),this.disableClearButton()},W.prototype.initialAfterFinalDate=function(){this.errorMessage="A data inicial não pode ser superior a data final. "},W.prototype.invalidDate=function(){this.errorMessage="Data inválida."},W.prototype.getInputValue=function(e){if(e.inicialDate.value){var t=this.inicialDate.value;this.verifyCorrectDates(t)&&this.inicialDate.setValue(t)}if(e.finalDate.value){var a=this.finalDate.value;this.verifyCorrectDates(a)&&this.finalDate.setValue(a)}this.verifyValidDates()&&this.returnDateEvent.emit({initialDate:this.inicialDate.value,finalDate:this.finalDate.value})},W.prototype.getErrorMessage=function(){return this.errorMessage},W.prototype.verifyCorrectDates=function(e){return!!e.isValid||(this.invalidDate(),!1)},W.decorators=[{type:g.Component,args:[{selector:"gualib-range-datepicker",template:'<div fxLayout="column">\n  <div fxLayout="row"  fxLayoutAlign="start center" fxLayoutGap="5px" s>\n\n    <div fxLayout="column" >\n      <label style="font-size: 10px;">Inicial</label>\n      <mat-form-field  [class.alert-error]="!validDate" class="date-filter" appearance="none">\n        <input readonly matInput [min]="minDate" [max]="maxDate"  [matDatepicker]="dp" [formControl]="inicialDate" class="date-input" (dateChange)="getInputValue(this)">   \n        <mat-datepicker-toggle matSuffix [for]="dp" class="date-input date-toggle"></mat-datepicker-toggle>\n        <mat-datepicker #dp startView="multi-year" \n          (yearSelected)="chosenYearHandler($event, INITIAL_DATE)"\n          (monthSelected)="chosenMonthHandler($event, dp, INITIAL_DATE)" \n          [calendarHeaderComponent]="exampleHeader">\n        </mat-datepicker>\n      </mat-form-field>\n    </div>\n    \n    <div fxLayout="column" >\n      <label style="font-size: 10px;">Final</label>\n      <mat-form-field [class.alert-error]="!validDate" class="date-filter" appearance="none">\n        <input readonly matInput [min]="minDate"  [max]="maxDate" [matDatepicker]="dp2"  [formControl]="finalDate" class="date-input" (dateChange)="getInputValue(this)">\n        <mat-datepicker-toggle matSuffix [for]="dp2" class="date-input date-toggle"></mat-datepicker-toggle>\n        <mat-datepicker #dp2 startView="multi-year" \n          (yearSelected)="chosenYearHandler($event, FINAL_DATE)"\n          (monthSelected)="chosenMonthHandler($event, dp2, FINAL_DATE)" \n          [calendarHeaderComponent]="exampleHeader">\n        </mat-datepicker>\n      </mat-form-field>\n    </div>\n\n    <div fxLayout="column"  *ngIf="displayButton" \n      class="clear-span" (click)="clear()" >\n      &nbsp;\n        <mat-icon color="primary" class="clear-icon">highlight_off</mat-icon>\n    </div>\n    \n    \n   \n  </div>\n  <mat-error *ngIf="!validDate"><p  style="font-size: 12px;">{{getErrorMessage()}}</p></mat-error>\n</div>',providers:[{provide:c.DateAdapter,useClass:d.MomentDateAdapter,deps:[c.MAT_DATE_LOCALE,d.MAT_MOMENT_DATE_ADAPTER_OPTIONS]},{provide:c.MAT_DATE_FORMATS,useValue:K}],styles:[".date-filter{max-width:90px!important;border:1px solid!important;border-radius:5%;color:#e0e0e0;max-height:45px!important}.date-input{color:#000;font-size:12px;margin-bottom:5%}.date-toggle{font-size:12px}.clear-span{cursor:pointer}.alert-error{color:red!important}.material-icons{font-size:20px!important}"]}]}],W.ctorParameters=function(){return[]},W.propDecorators={returnDateEvent:[{type:g.Output}],minDate:[{type:g.Input}],maxDate:[{type:g.Input}]},W);function W(){this.returnDateEvent=new g.EventEmitter,this.exampleHeader=$,this.displayButton=!1,this.inicialDate=new p.FormControl(U()),this.finalDate=new p.FormControl(U()),this.validDate=!0,this.errorMessage=null,this.INITIAL_DATE="initial",this.FINAL_DATE="final"}var J=(Q.decorators=[{type:g.NgModule,args:[{imports:[C],declarations:[Z,Z,$],entryComponents:[Z,$],exports:[Z]}]}],Q);function Q(){}var X=(ee.decorators=[{type:g.NgModule,args:[{exports:[q,V,w,z,J]}]}],ee);function ee(){}e.GuaThemeAngularModule=X,e.LoadingOverlayService=B,e.ɵg=E,e.ɵf=S,e.ɵe=V,e.ɵb=_,e.ɵa=q,e.ɵd=v,e.ɵo=$,e.ɵm=K,e.ɵn=Z,e.ɵl=J,e.ɵk=R,e.ɵj=z,e.ɵi=I,e.ɵh=w,e.ɵc=C,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=theme-angular.umd.min.js.map