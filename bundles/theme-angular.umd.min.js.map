{"version":3,"sources":["ng://theme-angular/lib/material.module.ts","ng://theme-angular/lib/shared.module.ts","ng://theme-angular/lib/select-search/select-search.component.ts","ng://theme-angular/lib/select-search/select-search.module.ts","ng://theme-angular/lib/image-gallery/image-gallery-zoom/image-gallery-zoom.component.ts","ng://theme-angular/lib/image-gallery/image-gallery.component.ts","ng://theme-angular/lib/image-gallery/image-gallery.module.ts","ng://theme-angular/lib/loading-overlay/loading-overlay.component.ts","ng://theme-angular/lib/loading-overlay/loading-overlay.service.ts","ng://theme-angular/lib/loading-overlay/loading-overlay.module.ts","ng://theme-angular/lib/search-chips-select/search-chips-select.component.ts","ng://theme-angular/lib/search-chips-select/search-chips-select.module.ts","ng://theme-angular/lib/range-datepicker/custom-header/custom-header.component.ts","ng://theme-angular/lib/range-datepicker/range-datepicker.component.ts","ng://theme-angular/lib/range-datepicker/range-datepicker.module.ts","ng://theme-angular/lib/theme-angular.module.ts"],"names":["MaterialModule","NgModule","args","exports","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","ScrollingModule","FlexLayoutModule","fakeActivatedRoute","snapshot","data","ɵ2","SharedModule","CommonModule","RouterModule","FormsModule","ReactiveFormsModule","BrowserAnimationsModule","providers","provide","ActivatedRoute","useValue","ɵ1","Router","GualibSelectSearchComponent","prototype","ngOnInit","this","filterElement","onSelectionChange","event","selectionChange","emit","value","itens","itensFiltrados","filter","item","toString","toLowerCase","indexOf","Component","selector","template","encapsulation","ViewEncapsulation","None","Input","Output","EventEmitter","GualibSelectSearchModule","declarations","imports","ImageGalleryZoomComponent","closeDialog","dialogRef","close","MatDialogRef","Inject","MAT_DIALOG_DATA","ImageGalleryComponent","ngOnChanges","images","length","selectedImage","height","openZoom","dialog","open","disableClose","width","maxWidth","maxHeight","url","color","closeButtonColor","background","closeButtonBackground","panelClass","onClick","$event","onAddImage","onClickDelete","stopPropagation","onDeleteImage","MatDialog","editMode","emptyImagePath","isDisplayBtn","GualibImageGalleryModule","entryComponents","LoadingOverlayComponent","image","LoadingOverlayService","startLoading","_this","setTimeout","setLoading","endLoading","load","quantidade","loading","getLoading","Injectable","GualibLoadingOverlayModule","forRoot","ngModule","GualibSearchChipsSelectComponent","Object","defineProperty","inputValue","val","onClickCloseChip","chipKey","onCloseChip","onInputFocus","inputRef","nativeElement","focus","onClickSearch","onSearch","onChangeSelect","selectValue","onKeyUp","inputChange","code","ViewChild","chips","selectLabel","selectChoices","GualibSearchChipsSelectModule","CustomHeader","ngOnDestroy","destroyed","next","complete","dateAdapter","format","calendar","activeDate","dateFormats","display","monthYearLabel","toLocaleUpperCase","previousClicked","mode","addCalendarMonths","addCalendarYears","nextClicked","changeDetection","ChangeDetectionStrategy","OnPush","MatCalendar","DateAdapter","MAT_DATE_FORMATS","ChangeDetectorRef","cdr","Subject","stateChanges","pipe","takeUntil","subscribe","markForCheck","momentAdpater","(( /** @type {?} */(moment))).default","moment","MY_FORMATS","parse","dateInput","dateA11yLabel","monthYearA11yLabel","RangeDatepickerComponent","inicialDate","setValue","startOf","finalDate","endOf","chosenYearHandler","normalizedYear","order","ctrlValue","disableClearButton","year","chosenMonthHandler","normalizedMonth","datepicker","month","verifyValidDates","returnDateEvent","initialDate","initial","final","isBefore","isSame","validDate","initialAfterFinalDate","displayButton","clear","FormControl","errorMessage","invalidDate","getInputValue","input","verifyCorrectDates","getErrorMessage","date","isValid","useClass","MomentDateAdapter","deps","MAT_DATE_LOCALE","MAT_MOMENT_DATE_ADAPTER_OPTIONS","exampleHeader","INITIAL_DATE","FINAL_DATE","GuaLibRangeDatepickerModule","GuaThemeAngularModule"],"mappings":"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","sourcesContent":["import { DragDropModule } from '@angular/cdk/drag-drop';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule\n} from '@angular/material';\n\n@NgModule({\n    exports: [\n        CdkTableModule,\n        CdkTreeModule,\n        DragDropModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        ScrollingModule,\n        FlexLayoutModule\n    ],\n})\nexport class MaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, ActivatedRoute, Router } from '@angular/router';\nimport { MaterialModule } from './material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nconst fakeActivatedRoute = {\n    snapshot: { data: {} }\n} as ActivatedRoute;\n\n@NgModule({\n    exports: [\n        CommonModule,\n        RouterModule,\n        MaterialModule,\n        FormsModule,\n        ReactiveFormsModule,\n        BrowserAnimationsModule\n    ],\n    providers: [\n        { provide: ActivatedRoute, useValue: fakeActivatedRoute },\n        { provide: Router, useValue: fakeActivatedRoute },\n\n    ],\n})\nexport class SharedModule { }\n","import {\n  Component,\n  OnInit,\n  Input,\n  ViewEncapsulation,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { SelectSearchItem } from './interface';\nimport { MatSelectChange } from '@angular/material';\n\n@Component({\n  selector: 'gualib-select-search',\n  templateUrl: './select-search.component.html',\n  styleUrls: ['./select-search.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GualibSelectSearchComponent implements OnInit {\n  @Input() itens: Array<SelectSearchItem>;\n  itensFiltrados: Array<SelectSearchItem>;\n  @Input() initSelectedValue: number;\n  @Output() selectionChange: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.filterElement('');\n  }\n\n  onSelectionChange(event: MatSelectChange) {\n    this.selectionChange.emit(event.value);\n  }\n\n  filterElement(value) {\n    if (this.itens) {\n      this.itensFiltrados = this.itens.filter((item) => {\n        return item.value.toString().toLowerCase().indexOf(value) > -1;\n      });\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared.module';\nimport { GualibSelectSearchComponent } from './select-search.component';\n\n@NgModule({\n  declarations: [GualibSelectSearchComponent],\n  imports: [\n    SharedModule\n  ],\n  exports: [\n    GualibSelectSearchComponent\n  ]\n})\nexport class GualibSelectSearchModule { }\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'gua-image-gallery-zoom',\n  templateUrl: './image-gallery-zoom.component.html',\n  styleUrls: ['./image-gallery-zoom.component.scss']\n})\nexport class ImageGalleryZoomComponent {\n\n  constructor(public dialogRef: MatDialogRef<ImageGalleryZoomComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  closeDialog(closeDialog: boolean) {\n    if (closeDialog)\n      return;\n    this.dialogRef.close();\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, OnChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { ImageGalleryZoomComponent } from './image-gallery-zoom/image-gallery-zoom.component';\n\n@Component({\n  selector: 'gualib-image-gallery',\n  templateUrl: './image-gallery.component.html',\n  styleUrls: ['./image-gallery.component.scss']\n})\nexport class ImageGalleryComponent implements OnInit, OnChanges {\n\n  @Input() images: string[] = [];\n  @Input() closeButtonColor: string;\n  @Input() closeButtonBackground: string;\n  @Input() panelClass: string;\n  @Input() editMode = false;\n  // tslint:disable-next-line: no-output-on-prefix\n  @Output() onAddImage = new EventEmitter();\n  // tslint:disable-next-line: no-output-on-prefix\n  @Output() onDeleteImage = new EventEmitter();\n  height: string;\n  @Input() disableClose = false;\n  @Input() emptyImagePath = '';\n  isDisplayBtn = false;\n\n  selectedImage: string;\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnChanges() {\n    if (this.images.length) {\n      this.selectedImage = this.images[0];\n    }\n  }\n\n  ngOnInit() {\n    this.height = 'auto';\n    if (this.images.length) {\n      this.selectedImage = this.images[0];\n    }\n  }\n\n  openZoom(): void {\n    if (this.selectedImage && this.images.length) {\n      this.dialog.open(ImageGalleryZoomComponent, {\n        disableClose: false,\n        height: '100%',\n        width: '100%',\n        maxWidth: '100vw',\n        maxHeight: '100vh',\n        data: {\n          url: this.selectedImage,\n          color: this.closeButtonColor,\n          background: this.closeButtonBackground,\n          disableClose: this.disableClose\n        },\n        panelClass: this.panelClass,\n      });\n    }\n  }\n\n  onClick($event) {\n    this.onAddImage.emit($event);\n  }\n\n  onClickDelete($event) {\n    $event.stopPropagation();\n    this.onDeleteImage.emit($event);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ImageGalleryComponent } from './image-gallery.component';\nimport { SharedModule } from '../shared.module';\nimport { ImageGalleryZoomComponent } from './image-gallery-zoom/image-gallery-zoom.component';\n\n@NgModule({\n  imports: [\n    SharedModule\n  ],\n  declarations: [\n    ImageGalleryComponent,\n    ImageGalleryZoomComponent,\n  ],\n  entryComponents:[ImageGalleryZoomComponent],\n  exports: [ImageGalleryComponent]\n})\nexport class GualibImageGalleryModule {\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'gualib-loading-overlay',\n  templateUrl: './loading-overlay.component.html',\n  styleUrls: ['./loading-overlay.component.scss']\n})\nexport class LoadingOverlayComponent {\n\n  @Input() loading: boolean;\n  @Input() image = 'assets/image-loading.gif';\n\n  constructor() { }\n}\n","\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LoadingOverlayService {\n    private loading = false;\n    private quantidade = 0;\n\n    startLoading(): void {\n        setTimeout(() => {\n            this.setLoading(true);\n        });\n    }\n\n    endLoading(): void {\n        setTimeout(() => {\n            this.setLoading(false);\n        });\n    }\n\n    private setLoading(load: boolean): void {\n        if (load) {\n            this.quantidade++;\n            this.loading = true;\n        } else {\n            this.quantidade--;\n            if (this.quantidade === 0) {\n                this.loading = false;\n            }\n        }\n    }\n\n    getLoading(): boolean {\n        return this.loading;\n    }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { LoadingOverlayComponent } from './loading-overlay.component';\nimport { SharedModule } from '../shared.module';\nimport { LoadingOverlayService } from './loading-overlay.service';\n\n@NgModule({\n  declarations: [\n    LoadingOverlayComponent\n  ],\n  imports: [\n    SharedModule\n  ],\n  exports: [\n    LoadingOverlayComponent\n  ],\n  providers: [\n    LoadingOverlayService\n  ]\n})\nexport class GualibLoadingOverlayModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: GualibLoadingOverlayModule,\n      providers: [LoadingOverlayService, LoadingOverlayComponent]\n    };\n  }\n\n}\n","import { Component, Input, Output, EventEmitter, ElementRef, ViewChild } from '@angular/core';\n\n@Component({\n    selector: 'gualib-search-chips-select',\n    templateUrl: './search-chips-select.component.html',\n    styleUrls: ['./search-chips-select.component.scss']\n})\nexport class GualibSearchChipsSelectComponent {\n    @ViewChild('inputRef') inputRef: ElementRef;\n\n    @Input() selectValue;\n    @Input() chips: Array<{ key, value }> = [];\n    inputValue = '';\n    @Input()\n    get input() {\n        return this.inputValue;\n    }\n    set input(val) {\n        this.inputValue = val;\n    }\n    @Output()\n    inputChange = new EventEmitter();\n    @Input() selectLabel = '';\n    @Input() selectChoices: Array<{ key, value }> = [];\n    // tslint:disable-next-line: no-output-on-prefix\n    @Output() onChangeSelect = new EventEmitter();\n    // tslint:disable-next-line: no-output-on-prefix\n    @Output() onCloseChip = new EventEmitter();\n    // tslint:disable-next-line: no-output-on-prefix\n    @Output() onSearch = new EventEmitter();\n\n    onClickCloseChip(chipKey: string, $event: MouseEvent) {\n        $event.stopPropagation();\n        this.onCloseChip.emit(chipKey);\n    }\n\n    onInputFocus() {\n        this.inputRef.nativeElement.focus();\n    }\n\n    onClickSearch() {\n        this.onSearch.emit(this.inputValue);\n    }\n\n    onSelectionChange() {\n        this.onChangeSelect.emit(this.selectValue);\n    }\n\n    onKeyUp($event: KeyboardEvent) {\n        this.inputChange.emit(this.inputValue);\n        if ($event.code === 'Enter') {\n            this.onClickSearch();\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { GualibSearchChipsSelectComponent } from './search-chips-select.component';\nimport { SharedModule } from '../shared.module';\n\n\n@NgModule({\n  declarations: [\n    GualibSearchChipsSelectComponent\n  ],\n  imports: [\n    SharedModule\n  ],\n  exports: [\n    GualibSearchChipsSelectComponent\n  ],\n  providers: [],\n})\nexport class GualibSearchChipsSelectModule { }\n","import { ChangeDetectionStrategy, Component, OnDestroy, ChangeDetectorRef, Inject } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MatCalendar, DateAdapter, MatDateFormats, MAT_DATE_FORMATS } from '@angular/material';\nimport { takeUntil } from 'rxjs/operators';\n\n\nexport const MY_FORMATS = {\n    parse: {\n      dateInput: 'MMM  YYYY',\n    },\n    display: {\n      dateInput: 'MMM  YYYY',\n      monthYearLabel: 'YYYY',\n      dateA11yLabel: 'LL',\n      monthYearA11yLabel: 'MMMM YYYY',\n    },\n  };\n\n@Component({\n    selector: 'custom-header',\n    templateUrl: './custom-header.component.html',\n    styleUrls: ['./custom-header.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CustomHeader<D> implements OnDestroy {\n    \n  private destroyed = new Subject<void>();\n\n  constructor(\n      private calendar: MatCalendar<D>, private dateAdapter: DateAdapter<D>,\n      @Inject(MAT_DATE_FORMATS) private dateFormats: MatDateFormats, cdr: ChangeDetectorRef) {\n    calendar.stateChanges\n        .pipe(takeUntil(this.destroyed))\n        .subscribe(() => cdr.markForCheck());\n  }\n\n  ngOnDestroy() {\n    this.destroyed.next();\n    this.destroyed.complete();\n  }\n\n  get periodLabel() {\n    return this.dateAdapter\n        .format(this.calendar.activeDate, this.dateFormats.display.monthYearLabel)\n        .toLocaleUpperCase();\n  }\n\n  previousClicked(mode: 'month' | 'year') {\n    this.calendar.activeDate = mode === 'month' ?\n        this.dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n        this.dateAdapter.addCalendarYears(this.calendar.activeDate, -1);\n  }\n\n  nextClicked(mode: 'month' | 'year') {\n    this.calendar.activeDate = mode === 'month' ?\n        this.dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n        this.dateAdapter.addCalendarYears(this.calendar.activeDate, 1);\n  }\n  \n  }\n  ","import { Component, OnInit, Output, EventEmitter, ÉµConsole, ChangeDetectionStrategy, OnDestroy, Inject, ChangeDetectorRef, Input } from '@angular/core';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatDateFormats} from '@angular/material/core';\nimport {MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS} from '@angular/material-moment-adapter';\nimport { FormControl } from '@angular/forms';\nimport { MatDatepicker} from '@angular/material';\nimport * as moment from 'moment';\nimport {Moment} from 'moment';\nconst momentAdpater = (moment as any).default ? (moment as any).default : moment;\nimport {CustomHeader} from './custom-header/custom-header.component';\n\n\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'MMM  YYYY',\n  },\n  display: {\n    dateInput: 'MMM  YYYY',\n    monthYearLabel: 'YYYY',\n    dateA11yLabel: 'MMM',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n\n@Component({\n  selector: 'gualib-range-datepicker',\n  templateUrl: './range-datepicker.component.html',\n  styleUrls: ['./range-datepicker.component.scss'],\n  providers: [\n    {\n        provide: DateAdapter,\n        useClass: MomentDateAdapter,\n        deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n    },\n    {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\n]\n})\nexport class RangeDatepickerComponent implements OnInit {\n\n  @Output()\n  returnDateEvent = new EventEmitter();\n  exampleHeader = CustomHeader;\n  displayButton:boolean = false;\n  inicialDate = new FormControl(momentAdpater());\n  finalDate = new FormControl(momentAdpater());\n  validDate:boolean = true;\n  errorMessage = null;\n  INITIAL_DATE = \"initial\";\n  FINAL_DATE = \"final\";\n\n  @Input()\n  minDate;\n\n  @Input()\n  maxDate;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.inicialDate.setValue(momentAdpater().startOf('month'));\n    this.finalDate.setValue(momentAdpater().endOf('month'));\n  }\n\n  chosenYearHandler(normalizedYear: Moment, order) {\n    this.disableClearButton();\n    if(order === 'initial') {\n      const ctrlValue = this.inicialDate.value;\n      ctrlValue.year(normalizedYear.year());\n      this.inicialDate.setValue(ctrlValue);\n    }else {\n      const ctrlValue = this.finalDate.value;\n      ctrlValue.year(normalizedYear.year());\n      this.finalDate.setValue(ctrlValue);\n    }\n  }\n\n  chosenMonthHandler(normalizedMonth: Moment, datepicker: MatDatepicker<Moment>, order) {\n    this.disableClearButton();\n    if(order === 'initial') {\n      const ctrlValue = this.inicialDate.value;\n      ctrlValue.month(normalizedMonth.month());\n      ctrlValue.startOf('month');\n      this.inicialDate.setValue(ctrlValue);\n      datepicker.close();\n    }else {\n      const ctrlValue = this.finalDate.value;\n      ctrlValue.month(normalizedMonth.month());\n      ctrlValue.endOf('month');\n      this.finalDate.setValue(ctrlValue);\n      datepicker.close();      \n    }\n    if(this.verifyValidDates()) {\n      this.returnDateEvent.emit({\"initialDate\":this.inicialDate.value, \"finalDate\":this.finalDate.value});\n    }\n    \n  }\n\n  verifyValidDates():boolean {\n    const initial:Moment = this.inicialDate.value;\n    const final:Moment = this.finalDate.value;\n    if(!initial.isBefore(final) && !initial.isSame(final)) {\n      this.initialAfterFinalDate()\n      this.validDate  = false;\n    }else {\n      this.validDate  = true;\n    }\n    return initial.isBefore(final);\n  }\n\n  disableClearButton() {\n    const initial:Moment = this.inicialDate.value;\n    const final:Moment = this.finalDate.value;\n    this.validDate  = true;\n    this.displayButton = !initial.isSame(final);\n  }\n\n  clear() {\n    this.inicialDate = new FormControl(momentAdpater());\n    this.finalDate = new FormControl(momentAdpater());\n    this.returnDateEvent.emit(null);\n    this.disableClearButton();\n  }\n\n  initialAfterFinalDate() {\n    this.errorMessage = 'A data inicial nÃ£o pode ser superior a data final. ';\n  }\n\n  invalidDate() {\n    this.errorMessage = 'Data invÃ¡lida.';\n  }\n\n\n  getInputValue(input) {\n    if(input.inicialDate.value){\n      const initial:Moment = this.inicialDate.value;\n      if(this.verifyCorrectDates(initial)) {\n        this.inicialDate.setValue(initial);\n      }\n    }\n    if(input.finalDate.value) {\n      const final:Moment = this.finalDate.value;\n      if(this.verifyCorrectDates(final)){\n        this.finalDate.setValue(final);\n      }\n    }\n    if(this.verifyValidDates()) {\n      this.returnDateEvent.emit({\"initialDate\":this.inicialDate.value, \"finalDate\":this.finalDate.value});\n    }\n  }\n\n  getErrorMessage() {\n    return this.errorMessage;\n  }\n\n  verifyCorrectDates(date: Moment) {\n    if(!date.isValid) {\n      this.invalidDate();\n      return false;\n    }\n    return true;\n\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared.module';\nimport { RangeDatepickerComponent } from './range-datepicker.component';\nimport { CustomHeader } from './custom-header/custom-header.component';\n\n@NgModule({\n  imports: [\n    SharedModule\n  ],\n  declarations: [\n    RangeDatepickerComponent,\n    RangeDatepickerComponent,\n    CustomHeader\n  ],\n  entryComponents: [RangeDatepickerComponent, CustomHeader],\n  exports: [RangeDatepickerComponent]\n})\nexport class GuaLibRangeDatepickerModule {\n}\n","import { NgModule } from '@angular/core';\nimport { GualibSelectSearchModule } from './select-search/select-search.module';\nimport { GualibImageGalleryModule } from './image-gallery/image-gallery.module';\nimport { GualibLoadingOverlayModule } from './loading-overlay/loading-overlay.module';\nimport { GualibSearchChipsSelectModule } from './search-chips-select/search-chips-select.module';\nimport { GuaLibRangeDatepickerModule } from './range-datepicker/range-datepicker.module';\n\n@NgModule({\n  exports: [\n    GualibLoadingOverlayModule,\n    GualibImageGalleryModule,\n    GualibSelectSearchModule,\n    GualibSearchChipsSelectModule,\n    GuaLibRangeDatepickerModule\n  ]\n})\nexport class GuaThemeAngularModule { }\n"]}